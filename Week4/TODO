# 2019 comments
Week 4A Up to inflexion point -- explain more slowly the different concepts, add some examples and problems examples with graphs, codes and animations. The topics should work if there is more space for it to breath.

# 2018 commentss:
# Change Class Flow:
- Start: Talk about possible graph problems
    - Test if a node belongs to a graph or not
    - Test the shortest path between A and B
    - Test the cheapest, or the most expensive path
    - Test if there is more than one path between A and B
    - Test multiple paths between multiple nodes
- Let's start with one example problem: Dominator
    - Get the students to propose a solution
    - Show the solution: One DFS, then remove each node and run again
- Many of Graph problems depend on DFS and BFS
    - simple explanation
    - simple code (Remake code to use the same base data structure)
    - What is the cost of DFS and BFS?
- Cost in graphs problems
    - Perform a DFS or BFS
    - Visit all edges in a node
    - Delete a node
    - Add a new node or edge to a graph
- These costs depend on the data structure. Lets see some examples of 
  data structure
    - Each data structure should have a code snipped and discussion 
      on the cost of: visiting, adding, removing, listing neighbors
    - Neighborhood matrix
    - Neighborhood list
    - Edge list
    - Using helping vectors to control deleted nodes/edges

- Other problems as in the current class (add more code and examples)
